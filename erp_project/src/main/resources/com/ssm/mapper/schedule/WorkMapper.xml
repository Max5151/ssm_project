<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.mapper.schedule.WorkMapper">
  <resultMap id="BaseResultMap" type="com.ssm.bean.schedule.Work">
    <id column="work_id" jdbcType="VARCHAR" property="workId" />
    <result column="process_number" jdbcType="VARCHAR" property="processNumber" />
    <result column="product_id" jdbcType="VARCHAR" property="productId" />
    <result column="process_id" jdbcType="VARCHAR" property="processId" />
    <result column="device_id" jdbcType="VARCHAR" property="deviceId" />
    <result column="rating" jdbcType="INTEGER" property="rating" />
  </resultMap>
  <resultMap id="JoinResultMap" type="com.ssm.bean.schedule.Work">
    <id column="work_id" jdbcType="VARCHAR" property="workId" />
    <result column="process_number" jdbcType="VARCHAR" property="processNumber" />
    <result column="product_id" jdbcType="VARCHAR" property="productId" />
    <result column="process_id" jdbcType="VARCHAR" property="processId" />
    <result column="device_id" jdbcType="VARCHAR" property="deviceId" />
    <result column="rating" jdbcType="INTEGER" property="rating" />
    <association property="product" javaType="product">
      <result column="product_id" property="productId"/>
      <result column="product_name" property="productName"/>
    </association>
    <association property="process" javaType="process">
      <result column="process_id" property="processId"/>
    </association>
    <association property="device" javaType="device">
      <result column="device_id" property="deviceId"/>
      <result column="device_name" property="deviceName"/>
    </association>

  </resultMap>
  <sql id="Base_Column_List">
    work_id, process_number, product_id, process_id, device_id, rating
  </sql>
  <sql id="Join_Column_List">
    work.work_id, work.process_number, product.product_id, process.process_id, device.device_id, work.rating,
     product.product_name, device.device_name
  </sql>
  <sql id="work_relatived_database">
    work, product, device, process
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="JoinResultMap">
    select 
    <include refid="Join_Column_List" />
    from
    <include refid="work_relatived_database"/>
      <where>
          product.product_id = work.product_id
          and process.process_id = work.process_id
          and device.device_id = work.device_id
          and work.work_id = #{workId,jdbcType=VARCHAR}
      </where>
  </select>
  <select id="selectByPageInformation" resultMap="JoinResultMap">
    select
    <include refid="Join_Column_List"/>
    from
    <include refid="work_relatived_database"/>
    <where>
      product.product_id = work.product_id
      and process.process_id = work.process_id
      and device.device_id = work.device_id
    </where>
    <if test="#{pageDetail} != null">
      limit #{pageDetail.rows} offset #{pageDetail.offset}
    </if>
  </select>
    <select id="selectByPageAndWorkCondition" resultMap="JoinResultMap">
        select
        <include refid="Join_Column_List"/>
        from
        <include refid="work_relatived_database"/>
        <where>
            product.product_id = work.product_id
            and process.process_id = work.process_id
            and device.device_id = work.device_id
            <if test="condition.workId != null">
                and work.work_id like #{condition.workId}
            </if>
            <if test="condition.productName != null">
                and product.product_name like #{condition.productName}
            </if>
            <if test="condition.deviceName != null">
                and device.device_name like #{condition.deviceName}
            </if>
            <if test="condition.processId != null">
                and process.process_id like #{condition.processId}
            </if>
        </where>
        <if test="#{pageDetail} != null">
            limit #{pageDetail.rows} offset #{pageDetail.offset}
        </if>
    </select>
    <select id="selectAllRecords" resultType="_int">
        select
        count(*)
        from
        <include refid="work_relatived_database"/>
        <where>
            product.product_id = work.product_id
            and process.process_id = work.process_id
            and device.device_id = work.device_id
        </where>
    </select>
    <select id="selectAllRecordsByCondition" resultType="_int">
        select
        count(*)
        from
        <include refid="work_relatived_database"/>
        <where>
            product.product_id = work.product_id
            and process.process_id = work.process_id
            and device.device_id = work.device_id
            <if test="condition.workId != null">
                and work.work_id like #{condition.workId}
            </if>
            <if test="condition.productName != null">
                and product.product_name like #{condition.productName}
            </if>
            <if test="condition.deviceName != null">
                and device.device_name like #{condition.deviceName}
            </if>
            <if test="condition.processId != null">
                and process.process_id like #{condition.processId}
            </if>
        </where>
    </select>
    <select id="selectAllWorks" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from work
    </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from work
    where work_id = #{workId,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteWorksByPrimaryKey" parameterType="java.lang.String">
        delete from work
        where work_id in
        <foreach collection="workIds" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
  <insert id="insert" parameterType="com.ssm.bean.schedule.Work">
    insert into work (work_id, process_number, product_id, 
      process_id, device_id, rating
      )
    values (#{workId,jdbcType=VARCHAR}, #{processNumber,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}, 
      #{processId,jdbcType=VARCHAR}, #{deviceId,jdbcType=VARCHAR}, #{rating,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.bean.schedule.Work">
    insert into work
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="workId != null">
        work_id,
      </if>
      <if test="processNumber != null">
        process_number,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="processId != null">
        process_id,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="rating != null">
        rating,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="workId != null">
        #{workId,jdbcType=VARCHAR},
      </if>
      <if test="processNumber != null">
        #{processNumber,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="processId != null">
        #{processId,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="rating != null">
        #{rating,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.bean.schedule.Work">
    update work
    <set>
      <if test="processNumber != null">
        process_number = #{processNumber,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="processId != null">
        process_id = #{processId,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="rating != null">
        rating = #{rating,jdbcType=INTEGER},
      </if>
    </set>
    where work_id = #{workId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.bean.schedule.Work">
    update work
    set process_number = #{processNumber,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=VARCHAR},
      process_id = #{processId,jdbcType=VARCHAR},
      device_id = #{deviceId,jdbcType=VARCHAR},
      rating = #{rating,jdbcType=INTEGER}
    where work_id = #{workId,jdbcType=VARCHAR}
  </update>
</mapper>
